### This is a working test illustrating how designs should be input to the analysis tool

## Step 1: Input all the points representing joints or member ends
# Name the points so that they can be referenced later
# & is to define a yaml variable
# * is to reference the yaml variable
points:
  - !Point &1
    name: 1
    x: 0
    y: 0.05
  - !Point &2
    name: 2
    x: -1
    y: 0
  - !Point &3
    name: 3
    x: -0.866
    y: 0.5
  - !Point &4
    name: 4
    x: -0.5
    y: 0.866
  - !Point &5
    name: 5
    x: 0
    y: 1
  - !Point &6
    name: 6
    x: 0.5
    y: 0.866
  - !Point &7
    name: 7
    x: 0.866
    y: 0.5
  - !Point &8
    name: 8
    x: 1
    y: 0

## Step 2: Define the elements as pieces which span between the points defined.
# Reference the defined points using '*'
# The material parameters must also be input including elastic modulus and cross-sectional area.
elements:
  # The following elements represent the aluminum tubing
  - !Element &tubeA
    name: tubeA
    start: *1 # Which set of 2 point names does this element span?
    end: *2
    E: 69000000000 # Modulus of elasticity
    A: 0.00038 # Cross-sectional area (Please use SI for the love of god)
  - !Element &tubeB
    name: tubeB
    start: *1
    end: *3
    E: 69000000000
    A: 0.00038
  - !Element &tubeC
    name: tubeC
    start: *1
    end: *4
    E: 69000000000
    A: 0.00038
  - !Element &tubeD
    name: tubeD
    start: *1
    end: *5
    E: 69000000000
    A: 0.00038
  - !Element &tubeE
    name: tubeE
    start: *1
    end: *6
    E: 69000000000
    A: 0.00038
  - !Element &tubeF
    name: tubeE
    start: *1
    end: *7
    E: 69000000000
    A: 0.00038
  - !Element &tubeG
    name: tubeE
    start: *1
    end: *8
    E: 69000000000
    A: 0.00038
  # The following elements represent tarp segments
  # These will need unique material properties also

tarps:
  - !Tarp
    name: tarpA
    start: *2
    end: *3
    E: 300
    A: 2
    nodecount: 1
    load: 10
  - !Tarp
    name: tarpB
    start: *3
    end: *4
    E: 300
    A: 2
    nodecount: 1
    load: 10
  - !Tarp
    name: tarpC
    start: *4
    end: *5
    E: 300
    A: 2
    nodecount: 1
    load: 10
  - !Tarp
    name: tarpD
    start: *5
    end: *6
    E: 300
    A: 2
    nodecount: 1
    load: 10
  - !Tarp
    name: tarpE
    start: *6
    end: *7
    E: 300
    A: 2
    nodecount: 1
    load: 10
  - !Tarp
    name: tarpF
    start: *7
    end: *8
    E: 300
    A: 2
    nodecount: 1
    load: 10

## Step 3: Input the applied forces to the desired points.
# Describe the loads that the frame will be subjected to.
# Include x and y components of magnitude as well as the point which the force will be applied to.
forces:
  - !Force
    name: load3
    point: *2
    x: 0
    y: -28.57
  - !Force
    name: load1
    point: *3
    x: 0
    y: -28.57 # x and y magnitudes of the applied forces
  - !Force
    name: load2
    point: *4
    x: 0
    y: -28.57
  - !Force
    name: load3
    point: *5
    x: 0
    y: -28.57
  - !Force
    name: load4
    point: *6
    x: 0
    y: -28.57
  - !Force
    name: load5
    point: *7
    x: 0
    y: -28.57
  - !Force
    name: load5
    point: *8
    x: 0
    y: -28.57

## Step 4: Input the constraints describing the frame environment.
# Include the point which is being constrained as well as the directions it is being constrained in.
constraints:
  - !Constraint # Center pin connection constraint
    name: leftConst
    point: *1
    x: 1 # Is motion constrained in the x and y directions?
    y: 1
  - !Constraint #contact constraints
    name: centerConst
    point: *2
    x: 0
    y: 1
  - !Constraint
    name: rightConst
    point: *8
    x: 0
    y: 1

pin: !Pin
  name: jesusNut
  length: 50
  E: 300 # Elastic modulus
  I: 500 # Second moment of inertia
  elements:
    - *tubeA
    - *tubeB
    - *tubeC
    - *tubeD
    - *tubeE
    - *tubeF
    - *tubeG